import os

SELF_HOSTED_LLAMA_API_KEY=os.getenv("SELF_HOSTED_LLAMA_API_KEY")
SELF_HOSTED_EMBEDDING_URL=os.getenv("SELF_HOSTED_EMBEDDING_URL", "").rstrip("/")
SELF_HOSTED_EMBEDDING_MODEL_ID=os.getenv("SELF_HOSTED_EMBEDDING_MODEL_ID")
TOKENIZER_MODEL_ID=os.getenv("TOKENIZER_MODEL_ID")

MILVUS_HOST=os.getenv("MILVUS_HOST")
MILVUS_PORT=int(os.getenv("MILVUS_PORT", "19530"))
MILVUS_CONNECTION_ALIAS=os.getenv("MILVUS_CONNECTION_ALIAS", "default")

MODEL_DIMENSION=int(os.getenv("MODEL_DIMENSION", "4096"))
MODEL_NAME=os.getenv("MODEL_NAME")
LLM_API_BASE=os.getenv("LLM_API_BASE", "").rstrip("/")
LLM_API_KEY=os.getenv("LLM_API_KEY")

CREATE_NEW_IF_NOT_EXISTS=os.getenv("CREATE_NEW_IF_NOT_EXISTS", "true").lower() == "true"

TELEGRAM_ROOM = os.getenv("TELEGRAM_ROOM")
TELEGRAM_ALERT_ROOM = os.getenv("TELEGRAM_ALERT_ROOM")
MIN_CHUNK_SIZE=10

DEDUPLICATION_CHECK_INTERVAL = int(os.getenv("DEDUPLICATION_CHECK_INTERVAL", "60"))

DEFAULT_EMBEDDING_BATCH_SIZE = os.getenv("DEFAULT_BATCH_SIZE") or 8
if isinstance(DEFAULT_EMBEDDING_BATCH_SIZE, str):
    DEFAULT_EMBEDDING_BATCH_SIZE = int(DEFAULT_EMBEDDING_BATCH_SIZE)
    
DEFAULT_TOP_K = os.getenv("DEFAULT_TOP_K") or 1
if isinstance(DEFAULT_TOP_K, str):
    DEFAULT_TOP_K = int(DEFAULT_TOP_K)

DEFAULT_CONCURRENT_EMBEDDING_REQUESTS_LIMIT = os.getenv("DEFAULT_CONCURRENT_EMBEDDING_REQUESTS_LIMIT") or 128
if isinstance(DEFAULT_CONCURRENT_EMBEDDING_REQUESTS_LIMIT, str):
    DEFAULT_CONCURRENT_EMBEDDING_REQUESTS_LIMIT = int(DEFAULT_CONCURRENT_EMBEDDING_REQUESTS_LIMIT)

DEFAULT_MILVUS_INSERT_BATCH_SIZE = os.getenv("DEFAULT_INSERT_BATCH_SIZE") or 128
if isinstance(DEFAULT_MILVUS_INSERT_BATCH_SIZE, str):
    DEFAULT_MILVUS_INSERT_BATCH_SIZE = int(DEFAULT_MILVUS_INSERT_BATCH_SIZE) 
    
API_SECRET_TOKEN = os.getenv("API_SECRET_TOKEN", "dummy_secret_token")
ETERNALAI_RESULT_HOOK_URL = os.getenv("ETERNALAI_RESULT_HOOK_URL")