version: '3.5'

services:
  etcd:
    container_name: kb-milvus-etcd
    image: quay.io/coreos/etcd:v3.5.5
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=50000
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/etcd:/etcd
    command: etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd
    healthcheck:
      test: ["CMD", "etcdctl", "endpoint", "health"]
      interval: 30s
      timeout: 20s
      retries: 3

  minio:
    container_name: kb-milvus-minio
    image: minio/minio:RELEASE.2023-03-20T20-16-18Z
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    ports:
      - "9001:9001"
      - "9000:9000"
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/minio:/minio_data
    command: minio server /minio_data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  standalone:
    container_name: kb-milvus-standalone
    image: milvusdb/milvus:v2.5.0-beta
    command: ["milvus", "run", "standalone"]
    security_opt:
    - seccomp:unconfined
    environment:
      ETCD_ENDPOINTS: etcd:2379
      MINIO_ADDRESS: minio:9000
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/milvus:/var/lib/milvus
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9091/healthz"]
      interval: 30s
      start_period: 90s
      timeout: 20s
      retries: 3
    ports:
      - "19530:19530"
      - "9091:9091"
    depends_on:
      - "etcd"
      - "minio"

  redis:
    container_name: kb-redis
    image: redis/redis-stack-server:latest
    ports:
      - "6379:6379"
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/redis:/data

  embedding:
    container_name: kb-emb
    image: james123454321/cogembeddings:latest 
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/kb-emb-cache:/root/.cache
    ports:
      - "9010:5000"
    devices:
      - /dev/nvidia0
    runtime: nvidia

  llm:
    container_name: kb-lm
    image: vllm/vllm-openai:latest
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/kb-lm-cache:/root/.cache
    command:  --model unsloth/Hermes-3-Llama-3.1-8B-bnb-4bit --load-format "bitsandbytes" --quantization "bitsandbytes" --max_model_len 16384 --max_num_seqs 1 --disable_log_requests --uvicorn_log_level error
    ports:
      - "9011:8000"
    devices:
      - /dev/nvidia0
    runtime: nvidia

  server:
    image: kb-service:latest
    build:
      context: .
      dockerfile: Dockerfile
    container_name: kb-server

    depends_on:
      - "standalone"
      - "redis"
      - "embedding"
      - "llm"

    environment:
      MILVUS_HOST: http://standalone:19530

      # set these three k/v to enable telegram alert
      TELEGRAM_ROOM: null
      TELEGRAM_ALERT_ROOM: null
      TELEGRAM_API_KEY: null

      SELF_HOSTED_EMBEDDING_URL: http://embedding:9010
      SELF_HOSTED_EMBEDDING_MODEL_ID: jinaai/jina-embeddings-v3
      TOKENIZER_MODEL_ID: jinaai/jina-embeddings-v3
      MODEL_DIMENSION: 1024

      SELF_HOSTED_LM_URL: http://llm:9011
      SELF_HOSTED_LM_MODEL_ID: unsloth/Hermes-3-Llama-3.1-8B-bnb-4bit

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 20s
      retries: 3
    ports:
      - "8000:8000"

networks:
  default:
    name: kb-service