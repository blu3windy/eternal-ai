// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: proto/script_service.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RPCRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ApiKey        string                 `protobuf:"bytes,1,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
	Id            int64                  `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"` // Unique identifier for the request
	Method        string                 `protobuf:"bytes,3,opt,name=method,proto3" json:"method,omitempty"`
	Params        string                 `protobuf:"bytes,4,opt,name=params,proto3" json:"params,omitempty"` // JSON string containing parameters
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RPCRequest) Reset() {
	*x = RPCRequest{}
	mi := &file_proto_script_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RPCRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RPCRequest) ProtoMessage() {}

func (x *RPCRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_script_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RPCRequest.ProtoReflect.Descriptor instead.
func (*RPCRequest) Descriptor() ([]byte, []int) {
	return file_proto_script_service_proto_rawDescGZIP(), []int{0}
}

func (x *RPCRequest) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

func (x *RPCRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RPCRequest) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *RPCRequest) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

type RPCResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`        // Echo back the request ID for correlation
	Method        string                 `protobuf:"bytes,2,opt,name=method,proto3" json:"method,omitempty"` // Echo back the method for correlation
	Output        string                 `protobuf:"bytes,3,opt,name=output,proto3" json:"output,omitempty"`
	IsError       bool                   `protobuf:"varint,4,opt,name=is_error,json=isError,proto3" json:"is_error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RPCResponse) Reset() {
	*x = RPCResponse{}
	mi := &file_proto_script_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RPCResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RPCResponse) ProtoMessage() {}

func (x *RPCResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_script_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RPCResponse.ProtoReflect.Descriptor instead.
func (*RPCResponse) Descriptor() ([]byte, []int) {
	return file_proto_script_service_proto_rawDescGZIP(), []int{1}
}

func (x *RPCResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RPCResponse) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *RPCResponse) GetOutput() string {
	if x != nil {
		return x.Output
	}
	return ""
}

func (x *RPCResponse) GetIsError() bool {
	if x != nil {
		return x.IsError
	}
	return false
}

var File_proto_script_service_proto protoreflect.FileDescriptor

const file_proto_script_service_proto_rawDesc = "" +
	"\n" +
	"\x1aproto/script_service.proto\x12\x06script\"e\n" +
	"\n" +
	"RPCRequest\x12\x17\n" +
	"\aapi_key\x18\x01 \x01(\tR\x06apiKey\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\x03R\x02id\x12\x16\n" +
	"\x06method\x18\x03 \x01(\tR\x06method\x12\x16\n" +
	"\x06params\x18\x04 \x01(\tR\x06params\"h\n" +
	"\vRPCResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x16\n" +
	"\x06method\x18\x02 \x01(\tR\x06method\x12\x16\n" +
	"\x06output\x18\x03 \x01(\tR\x06output\x12\x19\n" +
	"\bis_error\x18\x04 \x01(\bR\aisError2J\n" +
	"\rScriptService\x129\n" +
	"\n" +
	"ExecuteRPC\x12\x12.script.RPCRequest\x1a\x13.script.RPCResponse\"\x000\x01B\x18Z\x16agent-remote-svc/protob\x06proto3"

var (
	file_proto_script_service_proto_rawDescOnce sync.Once
	file_proto_script_service_proto_rawDescData []byte
)

func file_proto_script_service_proto_rawDescGZIP() []byte {
	file_proto_script_service_proto_rawDescOnce.Do(func() {
		file_proto_script_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_script_service_proto_rawDesc), len(file_proto_script_service_proto_rawDesc)))
	})
	return file_proto_script_service_proto_rawDescData
}

var file_proto_script_service_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_proto_script_service_proto_goTypes = []any{
	(*RPCRequest)(nil),  // 0: script.RPCRequest
	(*RPCResponse)(nil), // 1: script.RPCResponse
}
var file_proto_script_service_proto_depIdxs = []int32{
	0, // 0: script.ScriptService.ExecuteRPC:input_type -> script.RPCRequest
	1, // 1: script.ScriptService.ExecuteRPC:output_type -> script.RPCResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_script_service_proto_init() }
func file_proto_script_service_proto_init() {
	if File_proto_script_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_script_service_proto_rawDesc), len(file_proto_script_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_script_service_proto_goTypes,
		DependencyIndexes: file_proto_script_service_proto_depIdxs,
		MessageInfos:      file_proto_script_service_proto_msgTypes,
	}.Build()
	File_proto_script_service_proto = out.File
	file_proto_script_service_proto_goTypes = nil
	file_proto_script_service_proto_depIdxs = nil
}
