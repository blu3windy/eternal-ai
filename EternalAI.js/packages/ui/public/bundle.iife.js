var Interact=function(e,t){"use strict";function n(e){if(e&&e.__esModule)return e;var t=Object.create(null);return e&&Object.keys(e).forEach((function(n){if("default"!==n){var a=Object.getOwnPropertyDescriptor(e,n);Object.defineProperty(t,n,a.get?a:{enumerable:!0,get:function(){return e[n]}})}})),t.default=e,Object.freeze(t)}var a=n(t);const i=[{inputs:[{internalType:"string",name:"name_",type:"string"},{internalType:"string",name:"symbol_",type:"string"},{internalType:"uint256",name:"amount_",type:"uint256"},{internalType:"address",name:"recipient_",type:"address"},{internalType:"address",name:"promptScheduler_",type:"address"},{internalType:"address",name:"modelAddress_",type:"address"},{internalType:"string",name:"systemPrompt_",type:"string"},{internalType:"bytes",name:"storageInfo_",type:"bytes"}],stateMutability:"nonpayable",type:"constructor"},{inputs:[],name:"InvalidAddress",type:"error"},{inputs:[],name:"InvalidData",type:"error"},{inputs:[],name:"InvalidShortString",type:"error"},{inputs:[{internalType:"string",name:"str",type:"string"}],name:"StringTooLong",type:"error"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"delegator",type:"address"},{indexed:!0,internalType:"address",name:"fromDelegate",type:"address"},{indexed:!0,internalType:"address",name:"toDelegate",type:"address"}],name:"DelegateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"delegate",type:"address"},{indexed:!1,internalType:"uint256",name:"previousBalance",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newBalance",type:"uint256"}],name:"DelegateVotesChanged",type:"event"},{anonymous:!1,inputs:[],name:"EIP712DomainChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"hybridModel",type:"address"}],name:"ModelUpdate",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"caller",type:"address"},{indexed:!0,internalType:"uint256",name:"inferId",type:"uint256"},{indexed:!1,internalType:"bytes",name:"request",type:"bytes"}],name:"PromptPerformed",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"promptScheduler",type:"address"}],name:"PromptSchedulerHubUpdate",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"string",name:"systemPrompt",type:"string"}],name:"SystemPromptUpdate",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"CLOCK_MODE",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint32",name:"pos",type:"uint32"}],name:"checkpoints",outputs:[{components:[{internalType:"uint32",name:"fromBlock",type:"uint32"},{internalType:"uint224",name:"votes",type:"uint224"}],internalType:"struct ERC20Votes.Checkpoint",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[],name:"clock",outputs:[{internalType:"uint48",name:"",type:"uint48"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"delegatee",type:"address"}],name:"delegate",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"delegatee",type:"address"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"delegateBySig",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"delegates",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"eip712Domain",outputs:[{internalType:"bytes1",name:"fields",type:"bytes1"},{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"version",type:"string"},{internalType:"uint256",name:"chainId",type:"uint256"},{internalType:"address",name:"verifyingContract",type:"address"},{internalType:"bytes32",name:"salt",type:"bytes32"},{internalType:"uint256[]",name:"extensions",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"fetchCode",outputs:[{internalType:"string",name:"logic",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"getFileStorageChunkInfo",outputs:[{components:[{internalType:"uint256",name:"size",type:"uint256"},{components:[{internalType:"address",name:"pointer",type:"address"},{internalType:"uint32",name:"start",type:"uint32"},{internalType:"uint32",name:"end",type:"uint32"}],internalType:"struct BytecodeSlice[]",name:"slices",type:"tuple[]"}],internalType:"struct File",name:"file",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[],name:"getModelAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"timepoint",type:"uint256"}],name:"getPastTotalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"timepoint",type:"uint256"}],name:"getPastVotes",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPromptSchedulerAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"id",type:"uint256"}],name:"getResultById",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"view",type:"function"},{inputs:[],name:"getStorageInfo",outputs:[{components:[{internalType:"address",name:"contractAddress",type:"address"},{internalType:"string",name:"filename",type:"string"}],internalType:"struct IUtilityAgent.StorageInfo",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[],name:"getStorageMode",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"getSystemPrompt",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"getVotes",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"numCheckpoints",outputs:[{internalType:"uint32",name:"",type:"uint32"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes",name:"request",type:"bytes"}],name:"prompt",outputs:[{internalType:"uint256",name:"inferId",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"string",name:"filename",type:"string"}],name:"updateFileName",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"modelAddress",type:"address"}],name:"updateModelAddress",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"promptScheduler",type:"address"}],name:"updatePromptScheduler",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"string",name:"systemPrompt",type:"string"}],name:"updateSystemPrompt",outputs:[],stateMutability:"nonpayable",type:"function"}],r=[{inputs:[],name:"AlreadyCommitted",type:"error"},{inputs:[],name:"AlreadyRevealed",type:"error"},{inputs:[],name:"AlreadySeized",type:"error"},{inputs:[],name:"AlreadySubmitted",type:"error"},{inputs:[{internalType:"bytes32",name:"value",type:"bytes32"}],name:"Bytes32Set_DuplicatedValue",type:"error"},{inputs:[],name:"CannotFastForward",type:"error"},{inputs:[],name:"CommitTimeout",type:"error"},{inputs:[],name:"FailedTransfer",type:"error"},{inputs:[],name:"InvalidAddress",type:"error"},{inputs:[],name:"InvalidCommitment",type:"error"},{inputs:[],name:"InvalidContext",type:"error"},{inputs:[],name:"InvalidData",type:"error"},{inputs:[],name:"InvalidInferenceStatus",type:"error"},{inputs:[],name:"InvalidMiner",type:"error"},{inputs:[],name:"InvalidNonce",type:"error"},{inputs:[],name:"InvalidReveal",type:"error"},{inputs:[],name:"InvalidRole",type:"error"},{inputs:[],name:"NotCommitted",type:"error"},{inputs:[],name:"NotEnoughMiners",type:"error"},{inputs:[],name:"OnlyAssignedWorker",type:"error"},{inputs:[],name:"RevealTimeout",type:"error"},{inputs:[],name:"SubmitTimeout",type:"error"},{inputs:[{internalType:"uint256",name:"value",type:"uint256"}],name:"Uint256Set_DuplicatedValue",type:"error"},{inputs:[],name:"Unauthorized",type:"error"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"miner",type:"address"},{indexed:!0,internalType:"uint256",name:"assigmentId",type:"uint256"},{indexed:!1,internalType:"bytes32",name:"commitment",type:"bytes32"}],name:"CommitmentSubmission",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"chainId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"inferenceId",type:"uint256"},{indexed:!1,internalType:"address",name:"modelAddress",type:"address"},{components:[{internalType:"address",name:"receiver",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"enum IWorkerHub.DAOTokenReceiverRole",name:"role",type:"uint8"}],indexed:!1,internalType:"struct IWorkerHub.DAOTokenReceiverInfor[]",name:"receivers",type:"tuple[]"}],name:"DAOTokenMintedV2",type:"event"},{anonymous:!1,inputs:[{components:[{internalType:"uint16",name:"minerPercentage",type:"uint16"},{internalType:"uint16",name:"userPercentage",type:"uint16"},{internalType:"uint16",name:"referrerPercentage",type:"uint16"},{internalType:"uint16",name:"refereePercentage",type:"uint16"},{internalType:"uint16",name:"l2OwnerPercentage",type:"uint16"}],indexed:!1,internalType:"struct IWorkerHub.DAOTokenPercentage",name:"oldValue",type:"tuple"},{components:[{internalType:"uint16",name:"minerPercentage",type:"uint16"},{internalType:"uint16",name:"userPercentage",type:"uint16"},{internalType:"uint16",name:"referrerPercentage",type:"uint16"},{internalType:"uint16",name:"refereePercentage",type:"uint16"},{internalType:"uint16",name:"l2OwnerPercentage",type:"uint16"}],indexed:!1,internalType:"struct IWorkerHub.DAOTokenPercentage",name:"newValue",type:"tuple"}],name:"DAOTokenPercentageUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"inferenceId",type:"uint256"},{indexed:!1,internalType:"enum IWorkerHub.InferenceStatus",name:"newStatus",type:"uint8"}],name:"InferenceStatusUpdate",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint8",name:"version",type:"uint8"}],name:"Initialized",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"assignmentId",type:"uint256"},{indexed:!0,internalType:"uint256",name:"inferenceId",type:"uint256"},{indexed:!0,internalType:"address",name:"miner",type:"address"}],name:"MinerRoleSeized",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"assignmentId",type:"uint256"},{indexed:!0,internalType:"uint256",name:"inferenceId",type:"uint256"},{indexed:!0,internalType:"address",name:"miner",type:"address"},{indexed:!1,internalType:"uint40",name:"expiredAt",type:"uint40"}],name:"NewAssignment",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"inferenceId",type:"uint256"},{indexed:!0,internalType:"address",name:"model",type:"address"},{indexed:!0,internalType:"address",name:"creator",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"},{indexed:!1,internalType:"uint256",name:"originInferenceId",type:"uint256"}],name:"NewInference",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"account",type:"address"}],name:"Paused",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"inferenceId",type:"uint256"},{indexed:!0,internalType:"address",name:"model",type:"address"},{indexed:!0,internalType:"address",name:"creator",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"},{indexed:!1,internalType:"uint256",name:"originInferenceId",type:"uint256"},{indexed:!1,internalType:"bytes",name:"input",type:"bytes"},{indexed:!1,internalType:"bool",name:"flag",type:"bool"}],name:"RawSubmitted",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"miner",type:"address"},{indexed:!0,internalType:"uint256",name:"assigmentId",type:"uint256"},{indexed:!1,internalType:"uint40",name:"nonce",type:"uint40"},{indexed:!1,internalType:"bytes",name:"output",type:"bytes"}],name:"RevealSubmission",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"miner",type:"address"},{indexed:!0,internalType:"uint256",name:"assigmentId",type:"uint256"}],name:"SolutionSubmission",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"assignmentId",type:"uint256"},{indexed:!1,internalType:"bytes",name:"data",type:"bytes"}],name:"StreamedData",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"account",type:"address"}],name:"Unpaused",type:"event"},{inputs:[],name:"assignmentNumber",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"assignments",outputs:[{internalType:"uint256",name:"inferenceId",type:"uint256"},{internalType:"bytes32",name:"commitment",type:"bytes32"},{internalType:"bytes32",name:"digest",type:"bytes32"},{internalType:"uint40",name:"revealNonce",type:"uint40"},{internalType:"address",name:"worker",type:"address"},{internalType:"enum IWorkerHub.AssignmentRole",name:"role",type:"uint8"},{internalType:"enum IWorkerHub.Vote",name:"vote",type:"uint8"},{internalType:"bytes",name:"output",type:"bytes"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_assignId",type:"uint256"},{internalType:"bytes32",name:"_commitment",type:"bytes32"}],name:"commit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_assignmentId",type:"uint256"}],name:"getAssignmentInfo",outputs:[{components:[{internalType:"uint256",name:"inferenceId",type:"uint256"},{internalType:"bytes32",name:"commitment",type:"bytes32"},{internalType:"bytes32",name:"digest",type:"bytes32"},{internalType:"uint40",name:"revealNonce",type:"uint40"},{internalType:"address",name:"worker",type:"address"},{internalType:"enum IWorkerHub.AssignmentRole",name:"role",type:"uint8"},{internalType:"enum IWorkerHub.Vote",name:"vote",type:"uint8"},{internalType:"bytes",name:"output",type:"bytes"}],internalType:"struct IWorkerHub.Assignment",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_inferenceId",type:"uint256"}],name:"getAssignmentsByInference",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_inferenceId",type:"uint256"}],name:"getInferenceInfo",outputs:[{components:[{internalType:"uint256[]",name:"assignments",type:"uint256[]"},{internalType:"bytes",name:"input",type:"bytes"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"feeL2",type:"uint256"},{internalType:"uint256",name:"feeTreasury",type:"uint256"},{internalType:"address",name:"modelAddress",type:"address"},{internalType:"uint40",name:"submitTimeout",type:"uint40"},{internalType:"uint40",name:"commitTimeout",type:"uint40"},{internalType:"uint40",name:"revealTimeout",type:"uint40"},{internalType:"enum IWorkerHub.InferenceStatus",name:"status",type:"uint8"},{internalType:"address",name:"creator",type:"address"},{internalType:"address",name:"processedMiner",type:"address"},{internalType:"address",name:"referrer",type:"address"}],internalType:"struct IWorkerHub.Inference",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_modelAddress",type:"address"}],name:"getMinFeeToUse",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getTreasuryAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes",name:"_input",type:"bytes"},{internalType:"address",name:"_creator",type:"address"},{internalType:"bool",name:"_flag",type:"bool"}],name:"infer",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes",name:"_input",type:"bytes"},{internalType:"address",name:"_creator",type:"address"}],name:"infer",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"payable",type:"function"},{inputs:[],name:"inferenceNumber",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_wEAI",type:"address"},{internalType:"address",name:"_l2Owner",type:"address"},{internalType:"address",name:"_treasury",type:"address"},{internalType:"address",name:"_daoToken",type:"address"},{internalType:"address",name:"_stakingHub",type:"address"},{internalType:"uint16",name:"_feeL2Percentage",type:"uint16"},{internalType:"uint16",name:"_feeTreasuryPercentage",type:"uint16"},{internalType:"uint8",name:"_minerRequirement",type:"uint8"},{internalType:"uint40",name:"_submitDuration",type:"uint40"},{internalType:"uint40",name:"_commitDuration",type:"uint40"},{internalType:"uint40",name:"_revealDuration",type:"uint40"},{internalType:"uint16",name:"_feeRatioMinerValidor",type:"uint16"},{internalType:"uint256",name:"_daoTokenReward",type:"uint256"},{components:[{internalType:"uint16",name:"minerPercentage",type:"uint16"},{internalType:"uint16",name:"userPercentage",type:"uint16"},{internalType:"uint16",name:"referrerPercentage",type:"uint16"},{internalType:"uint16",name:"refereePercentage",type:"uint16"},{internalType:"uint16",name:"l2OwnerPercentage",type:"uint16"}],internalType:"struct IWorkerHub.DAOTokenPercentage",name:"_daoTokenPercentage",type:"tuple"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"pause",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"paused",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address[]",name:"_referrers",type:"address[]"},{internalType:"address[]",name:"_referees",type:"address[]"}],name:"registerReferrer",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_inferenceId",type:"uint256"}],name:"resolveInference",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_assignId",type:"uint256"},{internalType:"uint40",name:"_nonce",type:"uint40"},{internalType:"bytes",name:"_data",type:"bytes"}],name:"reveal",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_assignmentId",type:"uint256"}],name:"seizeMinerRole",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_newDAOTokenReward",type:"uint256"}],name:"setDAOTokenReward",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_wEAI",type:"address"}],name:"setWEAIAddress",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_assigmentId",type:"uint256"},{internalType:"bytes",name:"_data",type:"bytes"}],name:"submitSolution",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"unpause",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bool",name:"_isReferred",type:"bool"}],name:"validateDAOSupplyIncrease",outputs:[{internalType:"bool",name:"notReachedLimit",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"version",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"pure",type:"function"},{stateMutability:"payable",type:"receive"}],s=[{inputs:[],name:"AlreadyCommitted",type:"error"},{inputs:[],name:"AlreadyRevealed",type:"error"},{inputs:[],name:"AlreadySeized",type:"error"},{inputs:[],name:"AlreadySubmitted",type:"error"},{inputs:[],name:"CannotFastForward",type:"error"},{inputs:[],name:"CommitTimeout",type:"error"},{inputs:[],name:"InvalidAddress",type:"error"},{inputs:[],name:"InvalidCommitment",type:"error"},{inputs:[],name:"InvalidContext",type:"error"},{inputs:[],name:"InvalidData",type:"error"},{inputs:[],name:"InvalidInferenceStatus",type:"error"},{inputs:[],name:"InvalidMiner",type:"error"},{inputs:[],name:"InvalidNonce",type:"error"},{inputs:[],name:"InvalidReveal",type:"error"},{inputs:[],name:"InvalidRole",type:"error"},{inputs:[],name:"NotCommitted",type:"error"},{inputs:[],name:"NotEnoughMiners",type:"error"},{inputs:[],name:"OnlyAssignedWorker",type:"error"},{inputs:[],name:"RevealTimeout",type:"error"},{inputs:[],name:"SubmitTimeout",type:"error"},{inputs:[{internalType:"uint256",name:"value",type:"uint256"}],name:"Uint256Set_DuplicatedValue",type:"error"},{inputs:[],name:"Unauthorized",type:"error"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"miner",type:"address"},{indexed:!0,internalType:"uint256",name:"assigmentId",type:"uint256"},{indexed:!1,internalType:"bytes32",name:"commitment",type:"bytes32"}],name:"CommitmentSubmission",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"chainId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"inferenceId",type:"uint256"},{indexed:!1,internalType:"address",name:"modelAddress",type:"address"},{components:[{internalType:"address",name:"receiver",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"enum IWorkerHub.DAOTokenReceiverRole",name:"role",type:"uint8"}],indexed:!1,internalType:"struct IWorkerHub.DAOTokenReceiverInfor[]",name:"receivers",type:"tuple[]"}],name:"DAOTokenMintedV2",type:"event"},{anonymous:!1,inputs:[{components:[{internalType:"uint16",name:"minerPercentage",type:"uint16"},{internalType:"uint16",name:"userPercentage",type:"uint16"},{internalType:"uint16",name:"referrerPercentage",type:"uint16"},{internalType:"uint16",name:"refereePercentage",type:"uint16"},{internalType:"uint16",name:"l2OwnerPercentage",type:"uint16"}],indexed:!1,internalType:"struct IWorkerHub.DAOTokenPercentage",name:"oldValue",type:"tuple"},{components:[{internalType:"uint16",name:"minerPercentage",type:"uint16"},{internalType:"uint16",name:"userPercentage",type:"uint16"},{internalType:"uint16",name:"referrerPercentage",type:"uint16"},{internalType:"uint16",name:"refereePercentage",type:"uint16"},{internalType:"uint16",name:"l2OwnerPercentage",type:"uint16"}],indexed:!1,internalType:"struct IWorkerHub.DAOTokenPercentage",name:"newValue",type:"tuple"}],name:"DAOTokenPercentageUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"inferenceId",type:"uint256"},{indexed:!1,internalType:"enum IWorkerHub.InferenceStatus",name:"newStatus",type:"uint8"}],name:"InferenceStatusUpdate",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint8",name:"version",type:"uint8"}],name:"Initialized",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"assignmentId",type:"uint256"},{indexed:!0,internalType:"uint256",name:"inferenceId",type:"uint256"},{indexed:!0,internalType:"address",name:"miner",type:"address"}],name:"MinerRoleSeized",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"assignmentId",type:"uint256"},{indexed:!0,internalType:"uint256",name:"inferenceId",type:"uint256"},{indexed:!0,internalType:"address",name:"miner",type:"address"},{indexed:!1,internalType:"uint40",name:"expiredAt",type:"uint40"}],name:"NewAssignment",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"inferenceId",type:"uint256"},{indexed:!0,internalType:"address",name:"model",type:"address"},{indexed:!0,internalType:"address",name:"creator",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"},{indexed:!1,internalType:"uint256",name:"originInferenceId",type:"uint256"}],name:"NewInference",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"account",type:"address"}],name:"Paused",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"inferenceId",type:"uint256"},{indexed:!0,internalType:"address",name:"model",type:"address"},{indexed:!0,internalType:"address",name:"creator",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"},{indexed:!1,internalType:"uint256",name:"originInferenceId",type:"uint256"},{indexed:!1,internalType:"bytes",name:"input",type:"bytes"},{indexed:!1,internalType:"bool",name:"flag",type:"bool"}],name:"RawSubmitted",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"miner",type:"address"},{indexed:!0,internalType:"uint256",name:"assigmentId",type:"uint256"},{indexed:!1,internalType:"uint40",name:"nonce",type:"uint40"},{indexed:!1,internalType:"bytes",name:"output",type:"bytes"}],name:"RevealSubmission",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"miner",type:"address"},{indexed:!0,internalType:"uint256",name:"inferId",type:"uint256"}],name:"SolutionSubmission",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"assignmentId",type:"uint256"},{indexed:!1,internalType:"bytes",name:"data",type:"bytes"}],name:"StreamedData",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"account",type:"address"}],name:"Unpaused",type:"event"},{inputs:[{internalType:"uint256",name:"_inferenceId",type:"uint256"}],name:"getInferenceInfo",outputs:[{components:[{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"feeL2",type:"uint256"},{internalType:"uint256",name:"feeTreasury",type:"uint256"},{internalType:"address",name:"modelAddress",type:"address"},{internalType:"uint40",name:"submitTimeout",type:"uint40"},{internalType:"enum IWorkerHub.InferenceStatus",name:"status",type:"uint8"},{internalType:"address",name:"creator",type:"address"},{internalType:"address",name:"processedMiner",type:"address"},{internalType:"address",name:"referrer",type:"address"},{internalType:"bytes",name:"input",type:"bytes"},{internalType:"bytes",name:"output",type:"bytes"}],internalType:"struct IWorkerHub.Inference",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_modelAddress",type:"address"}],name:"getMinFeeToUse",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getMinerRequirement",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[],name:"getSubmitDuration",outputs:[{internalType:"uint40",name:"",type:"uint40"}],stateMutability:"view",type:"function"},{inputs:[],name:"getTreasuryAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes",name:"_input",type:"bytes"},{internalType:"address",name:"_creator",type:"address"},{internalType:"bool",name:"_flag",type:"bool"}],name:"infer",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes",name:"_input",type:"bytes"},{internalType:"address",name:"_creator",type:"address"}],name:"infer",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"payable",type:"function"},{inputs:[],name:"inferenceNumber",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_wEAI",type:"address"},{internalType:"address",name:"_l2Owner",type:"address"},{internalType:"address",name:"_treasury",type:"address"},{internalType:"address",name:"_daoToken",type:"address"},{internalType:"address",name:"_stakingHub",type:"address"},{internalType:"uint16",name:"_feeL2Percentage",type:"uint16"},{internalType:"uint16",name:"_feeTreasuryPercentage",type:"uint16"},{internalType:"uint8",name:"_minerRequirement",type:"uint8"},{internalType:"uint40",name:"_submitDuration",type:"uint40"},{internalType:"uint16",name:"_feeRatioMinerValidor",type:"uint16"},{internalType:"uint256",name:"_daoTokenReward",type:"uint256"},{components:[{internalType:"uint16",name:"minerPercentage",type:"uint16"},{internalType:"uint16",name:"userPercentage",type:"uint16"},{internalType:"uint16",name:"referrerPercentage",type:"uint16"},{internalType:"uint16",name:"refereePercentage",type:"uint16"},{internalType:"uint16",name:"l2OwnerPercentage",type:"uint16"}],internalType:"struct IWorkerHub.DAOTokenPercentage",name:"_daoTokenPercentage",type:"tuple"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"pause",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"paused",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address[]",name:"_referrers",type:"address[]"},{internalType:"address[]",name:"_referees",type:"address[]"}],name:"registerReferrer",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_daoToken",type:"address"}],name:"setDAOTokenAddress",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_stakingHub",type:"address"}],name:"setStakingHubAddress",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint40",name:"_submitDuration",type:"uint40"}],name:"setSubmitDuration",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_wEAI",type:"address"}],name:"setWEAIAddress",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"stakingHub",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_inferId",type:"uint256"},{internalType:"bytes",name:"_data",type:"bytes"}],name:"submitSolution",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"unpause",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"version",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"pure",type:"function"},{stateMutability:"payable",type:"receive"}];var p;e.ChainId=void 0,(p=e.ChainId||(e.ChainId={}))[p.BASE=8453]="BASE",p[p.BSC=56]="BSC";const u={56:"https://bsc-dataseed.binance.org/",8453:"https://base.llamarpc.com"},y=async e=>new Promise((t=>{setTimeout(t,e)})),o=async e=>{console.log("LightHouse - Upload content to light house");const t=await fetch("https://api.eternalai.org/api/service/light-house/upload/public",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({content:e})});if(!t.ok)throw new Error(`Light house upload failed: ${t.statusText}`);const n=await t.json();return console.log("LightHouse - Upload succeed - url",n.data),n.data},d={},l=(e,t)=>(d[e]||(d[e]=new a.Contract(e,i,t.provider)),d[e]),m=(e,t)=>(d[e]||(d[e]=new a.Contract(e,s,t.provider)),d[e]);class c{result_uri;storage;data;constructor(e,t,n){this.result_uri=e,this.storage=t,this.data=n}static fromJSON(e){const t=JSON.parse(e);return Object.assign(new c("","",""),t)}}const T={convertMessagesToBytes:async(e,t)=>{if(t){const t=await o(JSON.stringify(e));return a.utils.toUtf8Bytes(t)}return a.utils.toUtf8Bytes(JSON.stringify({messages:e}))},getSystemPrompt:async(e,t)=>{try{console.log("infer getSystemPrompt - start");const n=l(e,t),a=await n.getSystemPrompt();return console.log("infer getSystemPrompt - succeed",a),a}catch(e){throw console.log("infer getSystemPrompt - failed"),e}finally{console.log("infer getSystemPrompt - end")}},createPayloadWithPrompt:async(e,t)=>{try{console.log("infer createPayloadWithPrompt - start",t);const n=t.agentAddress,i=l(n,e),r=await T.getSystemPrompt(n,e),{chainId:s,prompt:p,isLightHouse:u}=t,y=await T.convertMessagesToBytes([{role:"system",content:r},{role:"user",content:p}],!!u),o=i.interface.encodeFunctionData("prompt(bytes)",[y]),d=e.address||await e.getAddress(),[m,c,f]=await Promise.all([i.estimateGas.prompt(y),e.provider.getGasPrice(),e.provider.getTransactionCount(d)]),g={to:n,from:d,data:o,chainId:a.BigNumber.from(s).toNumber(),gasLimit:m,gasPrice:c,nonce:f};return console.log("infer createPayloadWithPrompt - succeed",g),g}catch(e){throw console.log("infer createPayloadWithPrompt - failed"),e}finally{console.log("infer createPayloadWithPrompt - end")}},createPayloadWithMessages:async(e,t)=>{try{console.log("infer createPayloadWithMessages - start",t);const n=t.agentAddress,i=l(n,e),{chainId:r,messages:s,isLightHouse:p}=t,u=await T.convertMessagesToBytes(s,!!p),y=i.interface.encodeFunctionData("prompt(bytes)",[u]),o=e.address||await e.getAddress(),[d,m,c]=await Promise.all([i.estimateGas.prompt(u),e.provider.getGasPrice(),e.provider.getTransactionCount(o)]),f={to:n,from:o,data:y,chainId:a.BigNumber.from(r).toNumber(),gasLimit:d,gasPrice:m,nonce:c};return console.log("infer createPayloadWithMessages - succeed",f),f}catch(e){throw console.log("infer createPayloadWithMessages - failed"),e}finally{console.log("infer createPayloadWithMessages - end")}},sendPrompt:async(e,t)=>{try{console.log("infer execute - start"),console.log("infer execute - send transaction",t);const n=await e.provider.sendTransaction(t);console.log("infer execute - waiting",n);return(await n.wait()).transactionHash}catch(e){throw console.log("infer execute - failed"),e}finally{console.log("infer execute - end")}},getWorkerHubAddress:async(e,t)=>{try{console.log("infer getWorkerHubAddress - start",{agentAddress:e});const n=l(e,t),a=await n.getPromptSchedulerAddress();return console.log("infer getWorkerHubAddress - succeed",a),a}catch(e){throw console.log("infer getWorkerHubAddress - failed"),e}finally{console.log("infer getWorkerHubAddress - end")}},getInferId:async(e,t)=>{const n=await e.provider.getTransactionReceipt(t);if(!n||1!=n.status)throw new Error("Transaction receipt not found.");try{const e=new a.utils.Interface(r),t=n.logs.map((t=>{try{return e.parseLog(t)}catch(e){return null}})).filter((e=>null!==e)),i=t?.find((e=>"NewInference"===e.name));return i?.args?.inferenceId}catch(e){throw new Error("No Infer Id")}},processOutput:e=>{const t=a.utils.toUtf8String(e);try{return c.fromJSON(t)}catch(e){return null}},processOutputToInferResponse:async e=>{const t=T.processOutput(e);if(t){if("lighthouse-filecoint"==t.storage||t.result_uri.includes("ipfs://")){const e=t.result_uri.replace("ipfs://","https://gateway.lighthouse.storage/ipfs/"),n=await fetch(e);if(n.ok){return await n.text()}return null}if(""!=t.data){return atob(t.data)}return null}return null},getInferenceById:async(t,n,i,r)=>{if(r===e.ChainId.BSC){const e=m(n,t),r=(await e.getInferenceInfo(i))[10],s=a.utils.arrayify(r);if(0!=s.length){const e=await T.processOutputToInferResponse(s);return e||null}throw new Error(`waiting process inference ${i}`)}if(r===e.ChainId.BASE){const e=m(n,t),r=await e.getInferenceInfo(i);if(0==r.length)throw new Error("No assignment found");const s=r[0],p=await e.getAssignmentInfo(s);if(0==p.length)throw new Error("Inference result not ready");const u=p[7],y=a.utils.arrayify(u);if(0!=y.length){const e=await T.processOutputToInferResponse(y);return e||null}throw new Error(`waiting process inference ${i}`)}throw Error("Unsupported chainId")},listenPromptResponse:async(e,t,n,a)=>{try{console.log("infer listenPromptResponse - start",{chainId:e,workerHubAddress:n,promptedTxHash:a});let i=null;const r=await T.getInferId(t,a);for(;;)try{i=await T.getInferenceById(t,n,r,e);break}catch(e){console.log("Retry to get inference by reference id"),await y(30)}return console.log("infer listenPromptResponse - succeed",i),i}catch(e){throw console.log("infer listenPromptResponse - failed"),e}finally{console.log("infer listenPromptResponse - end")}}};var f=Object.freeze({__proto__:null,Infer:T});return e.CHAIN_MAPPING=u,e.Interact=class{_wallet;constructor(e){if(!a.Wallet.isSigner(e))throw new Error("Provided wallet is not a signer");this._wallet=e}getProvider(e,t){if(t)return new a.providers.JsonRpcProvider(t);if(!u[e])throw new Error(`Unsupported chainId: ${e}`);return new a.providers.JsonRpcProvider(u[e])}getNetworkCredential(e,t){const n=this.getProvider(e,t);return{provider:n,signer:this._wallet.connect(n)}}normalizePayload(e){return{...e,isLightHouse:e.isLightHouse??!1}}async infer(e){try{const t=this.normalizePayload(e);if(console.log("infer - start",{payload:t}),"string"==typeof t.prompt){const e=await this.inferWithPrompt(t);return console.log("infer - succeed",e),e}{const e=await this.inferWithMessages(t);return console.log("infer - succeed",e),e}}catch(e){throw console.log("infer - failed",e),e}finally{console.log("infer - end")}}async inferWithPrompt(e){console.log("inferWithPrompt - start");const{signer:t}=this.getNetworkCredential(e.chainId,e.rpcUrl),n=await T.createPayloadWithPrompt(t,e),a=await t.signTransaction(n),i=await T.sendPrompt(t,a),r=await T.getWorkerHubAddress(e.agentAddress,t);return await T.listenPromptResponse(e.chainId,t,r,i)}async inferWithMessages(e){console.log("inferWithMessages - start");const{signer:t}=this.getNetworkCredential(e.chainId,e.rpcUrl),n=await T.createPayloadWithMessages(t,e),a=await t.signTransaction(n),i=await T.sendPrompt(t,a),r=await T.getWorkerHubAddress(e.agentAddress,t);return await T.listenPromptResponse(e.chainId,t,r,i)}},e.InteractWithExternalWallet=class{_wallet;constructor(e){this._wallet=e}getProvider(e,t){if(t)return new a.providers.JsonRpcProvider(t);if(!u[e])throw new Error(`Unsupported chainId: ${e}`);return new a.providers.JsonRpcProvider(u[e])}getNetworkCredential(e,t){const n=this.getProvider(e,t);return{provider:n,signer:{...this._wallet,provider:n}}}normalizePayload(e){return{...e,isLightHouse:e.isLightHouse??!1}}async infer(e){try{const t=this.normalizePayload(e);if(console.log("inferWithExternalWallet - start",{payload:t}),"string"==typeof t.prompt){const e=await this.inferWithPrompt(t);return console.log("inferWithExternalWallet - succeed",e),e}{const e=await this.inferWithMessages(t);return console.log("inferWithExternalWallet - succeed",e),e}}catch(e){throw console.log("inferWithExternalWallet - failed",e),e}finally{console.log("inferWithExternalWallet - end")}}async inferWithPrompt(e){console.log("inferWithEternalWalletWithPrompt - start");const{signer:t}=this.getNetworkCredential(e.chainId,e.rpcUrl),n=await T.createPayloadWithPrompt(t,e),a=await t.requestSignature(n),i=await T.sendPrompt(t,a),r=await T.getWorkerHubAddress(e.agentAddress,t);return await T.listenPromptResponse(e.chainId,t,r,i)}async inferWithMessages(e){console.log("inferWithEternalWalletWithMessages - start");const{signer:t}=this.getNetworkCredential(e.chainId,e.rpcUrl),n=await T.createPayloadWithMessages(t,e),a=await t.requestSignature(n),i=await T.sendPrompt(t,a),r=await T.getWorkerHubAddress(e.agentAddress,t);return await T.listenPromptResponse(e.chainId,t,r,i)}},e.methods=f,Object.defineProperty(e,"__esModule",{value:!0}),e}({},ethers);
//# sourceMappingURL=bundle.iife.js.map
